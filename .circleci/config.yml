version: 2.1
jobs:
  build-node18:
    docker:
      - image: cimg/node:18.20-browsers
    working_directory: ~/repo
    steps:
      - run: sudo apt-get install libxss1
      - checkout
      - run: yarn
      - run: yarn run ci
      - run:
          command: cat ./coverage/lcov.info | ./node_modules/.bin/coveralls
          environment:
            COVERALLS_SERVICE_NAME: circle-ci
            COVERALLS_GIT_BRANCH: ${CIRCLE_BRANCH}

  build-node20:
    docker:
      - image: cimg/node:20.11-browsers
    working_directory: ~/repo
    steps:
      - run: sudo apt-get install libxss1
      - checkout
      - run: yarn
      - run: yarn run ci

  compliance:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/workdir
    steps:
      - checkout
      - run:
          name: upgrade pip
          command: python -m pip install --upgrade pip
      - run:
          name: compliance check
          command: |
            pip install --user reuse
            ~/.local/bin/reuse lint

  deploy-npm:
    docker:
      - image: cimg/node:18.20-browsers
    working_directory: ~/repo
    steps:
      - run: sudo apt-get install libxss1
      - checkout
      - run: yarn --pure-lockfile
      - run: yarn run ci
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      # To help debug when lerna detects changes to the working tree and fails the publish
      - run: git status
      - run: yarn run release:publish --no-verify-access

  prepare-vsix:
    docker:
      - image: cimg/node:18.20-browsers
    working_directory: ~/repo
    steps:
      - run: sudo apt-get install libxss1
      - checkout
      - run: yarn
      - run: yarn run ci
      - persist_to_workspace:
          root: "./packages/xml-toolkit"
          paths:
            # https://golang.org/pkg/path/filepath/#Match
            - xml-toolkit-*

  deploy-gh-releases:
    docker:
      - image: cimg/go:1.13
    steps:
      - attach_workspace:
          at: ./dist
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=${CIRCLE_TAG}
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./dist/

workflows:
  version: 2
  voter:
    jobs:
      - build-node18
      - build-node20
      - compliance
  release:
    jobs:
      - deploy-npm:
          filters:
            tags:
              only: /^RELEASE/
            branches:
              ignore: /.*/
      - prepare-vsix:
          filters:
            tags:
              only: /^xml-toolkit@[0-9]+(.[0-9]+)*/
            branches:
              ignore: /.*/
      - deploy-gh-releases:
          requires:
            - prepare-vsix
          filters:
            tags:
              only: /^xml-toolkit@[0-9]+(.[0-9]+)*/
            branches:
              ignore: /.*/
